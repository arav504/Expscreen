apiVersion: apps/v1
kind: Deployment
metadata:
  name:  hello-kubernetes
  labels:
    app: hello-kubernetes
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-kubernetes
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: hello-kubernetes
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - hello-kuberenetes
      containers:
        - name: hello-kubernetes
          image:  paulbouwer/hello-kubernetes:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
------------------------------------------------------------------

apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes
  labels:
    app: hello-kuberntes
    service: hello-kubernetes
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: hello-kubernetes

----------------------------------------------------------------------

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-kubernetes
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: hello-kubernetes
          servicePort: 8080
          path: /
 